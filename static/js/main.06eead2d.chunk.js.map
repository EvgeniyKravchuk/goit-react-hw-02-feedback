{"version":3,"sources":["components/buttons/Buttons.styled.jsx","components/generalComponents/general.styled.jsx","components/buttons/Buttons.jsx","components/feedback/Feedback.styled.jsx","components/feedback/FeedbackList.jsx","components/feedback/Feedback.jsx","App.js","index.js"],"names":["Button","styled","button","Wrapper","div","Section","section","props","list","Title","h1","Undertitle","h2","Buttons","state","onClick","Object","keys","map","key","type","name","List","ul","Item","li","Notification","p","FeedbackList","total","percentage","Feedback","App","good","neutral","bad","handleClick","evt","target","setState","prevState","countTotalFeedback","values","reduce","previous","current","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAEaA,EAASC,IAAOC,OAAV,kPCANC,EAAUF,IAAOG,IAAV,qKAYPC,EAAUJ,IAAOK,QAAV,+MAIJ,SAACC,GAAD,OAAYA,EAAMC,KAAO,OAAS,YAWrCC,EAAQR,IAAOS,GAAV,wGAQLC,EAAaV,IAAOW,GAAV,gI,OCjCR,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACvC,OACE,eAACV,EAAD,WACE,cAACM,EAAD,sCACCK,OAAOC,KAAKH,GAAOI,KAAI,SAACC,GAAD,OACtB,cAACnB,EAAD,CAAkBoB,KAAK,SAASC,KAAMF,EAAKJ,QAASA,EAApD,SACGI,GADUA,SCPd,IAAMG,EAAOrB,IAAOsB,GAAV,oFAOJC,EAAOvB,IAAOwB,GAAV,yEAMJC,EAAezB,IAAO0B,EAAV,+DCZV,SAASC,EAAT,GAAqD,IAA7Bd,EAA4B,EAA5BA,MAAOe,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACnD,OACE,eAACR,EAAD,WACGN,OAAOC,KAAKH,GAAOI,KAAI,SAACC,GAAD,OACtB,eAACK,EAAD,WACGL,EADH,KACUL,EAAMK,GADhB,MAAWA,MAIb,eAACK,EAAD,qBAAcK,OACd,eAACL,EAAD,kCAA2BM,IAA3B,UCRS,SAASC,EAAT,GAAiD,IAA7BjB,EAA4B,EAA5BA,MAAOe,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC/C,OACE,eAACzB,EAAD,CAASG,KAAK,OAAd,UACE,cAACG,EAAD,0BACCkB,IACC,cAACD,EAAD,CAAcd,MAAOA,EAAOe,MAAOA,EAAOC,WAAYA,IAEtD,cAACJ,EAAD,mC,ICLaM,E,4MACnBlB,MAAQ,CACNmB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,YAAc,SAACC,GACb,IAAQhB,EAASgB,EAAIC,OAAbjB,KACR,EAAKkB,UAAS,SAACC,GAAD,sBACXnB,EAAOmB,EAAUnB,GAAQ,O,EAI9BoB,mBAAqB,WAGnB,OAFoBzB,OAAO0B,OAAO,EAAK5B,OACb6B,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,M,EAIrEC,gCAAkC,WAChC,IAAQb,EAAS,EAAKnB,MAAdmB,KACFJ,EAAQ,EAAKY,qBAGnB,OAAKZ,GAFeI,EAAOJ,EAAS,KAMlBkB,UAHT,G,4CAMX,WACE,OACE,eAAC5C,EAAD,WACE,cAACM,EAAD,wBACA,cAACI,EAAD,CAASC,MAAOkC,KAAKlC,MAAOC,QAASiC,KAAKZ,cAC1C,cAACL,EAAD,CACEjB,MAAOkC,KAAKlC,MACZe,MAAOmB,KAAKP,mBACZX,WAAYkB,KAAKF,yC,GAxCMG,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.06eead2d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 150px;\n  height: 40px;\n\n  background-color: orange;\n\n  padding: 0px;\n  margin: 0px;\n  margin-right: 10px;\n\n  transition-duration: 500ms;\n  &:hover,\n  &:focus {\n    background-color: red;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n\n  padding: 20px;\n`;\n\nexport const Section = styled.section`\n  border: 1px solid black;\n  border-radius: 10px;\n\n  text-align: ${(props) => (props.list ? \"left\" : \"center\")};\n\n  width: 700px;\n\n  padding: 10px;\n  margin: 0px;\n  margin-top: 20px;\n\n  background-color: grey;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport const Undertitle = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n\n  padding: 0px;\n  margin: 0px;\n  margin-bottom: 10px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Button } from \"./Buttons.styled\";\nimport { Section, Undertitle } from \"../generalComponents/general.styled\";\n\nexport default function Buttons({ state, onClick }) {\n  return (\n    <Section>\n      <Undertitle>Please, leave feedback:</Undertitle>\n      {Object.keys(state).map((key) => (\n        <Button key={key} type=\"button\" name={key} onClick={onClick}>\n          {key}\n        </Button>\n      ))}\n    </Section>\n  );\n}\n\nButtons.propTypes = {\n  onClick: PropTypes.func,\n  state: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  margin: 0px;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  font-size: 20px;\n\n  margin-bottom: 5px;\n`;\n\nexport const Notification = styled.p`\n  font-size: 25px;\n  color: red;\n`;\n","import PropTypes from \"prop-types\";\nimport { List, Item } from \"./Feedback.styled\";\n\nexport default function FeedbackList({ state, total, percentage }) {\n  return (\n    <List>\n      {Object.keys(state).map((key) => (\n        <Item key={key}>\n          {key}: {state[key]}.\n        </Item>\n      ))}\n      <Item>Total: {total()}</Item>\n      <Item>Positive feedbacks: {percentage()}%</Item>\n    </List>\n  );\n}\n\nFeedbackList.propTypes = {\n  percentage: PropTypes.func,\n  state: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  total: PropTypes.func,\n};\n","import FeedbackList from \"./FeedbackList\";\nimport { Section, Undertitle } from \"../generalComponents/general.styled\";\nimport { Notification } from \"./Feedback.styled\";\n\nexport default function Feedback({ state, total, percentage }) {\n  return (\n    <Section list=\"true\">\n      <Undertitle>Statistics:</Undertitle>\n      {total() ? (\n        <FeedbackList state={state} total={total} percentage={percentage} />\n      ) : (\n        <Notification>No feedback given</Notification>\n      )}\n    </Section>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.module.css\";\nimport Buttons from \"./components/buttons/Buttons\";\nimport Feedback from \"./components/feedback/Feedback\";\nimport { Wrapper, Title } from \"./components/generalComponents/general.styled\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (evt) => {\n    const { name } = evt.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const stateValues = Object.values(this.state);\n    const total = stateValues.reduce((previous, current) => previous + current);\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = (good / total) * 100;\n\n    if (!total) {\n      return 0;\n    }\n\n    return percentage.toFixed();\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Feedbacks</Title>\n        <Buttons state={this.state} onClick={this.handleClick} />\n        <Feedback\n          state={this.state}\n          total={this.countTotalFeedback}\n          percentage={this.countPositiveFeedbackPercentage}\n        />\n      </Wrapper>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}