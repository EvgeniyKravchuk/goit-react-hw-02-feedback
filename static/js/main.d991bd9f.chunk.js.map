{"version":3,"sources":["components/Statistics/StatisticsComponents.jsx","components/Statistics/StatisticsButtons.jsx","components/Statistics/StatisticsList.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Title","h1","Button","button","Undertitle","h2","StatsList","ul","StatsItem","li","Notification","p","StatisticsButtons","onButtonClick","ButtonsData","map","id","text","onClick","StatisticsList","state","total","positiveTotal","ListItemData","Statistics","renderTask","trueRenderTaskMarkup","falseRenderMarkup","App","good","neutral","bad","onRateButtonClick","currentTarget","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qvBAEaA,EAAUC,IAAOC,IAAV,yHASPC,EAAQF,IAAOG,GAAV,yFAOLC,EAASJ,IAAOK,OAAV,+VAuBNC,EAAaN,IAAOO,GAAV,yFAMVC,EAAYR,IAAOS,GAAV,oFAOTC,EAAYV,IAAOW,GAAV,gIAUTC,EAAeZ,IAAOa,EAAV,qE,eC5DV,SAASC,EAAT,GAA+C,IAAlBC,EAAiB,EAAjBA,cAC1C,OAAOC,EAAYC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACrB,cAACf,EAAD,CAAiBc,GAAIA,EAAIE,QAASL,EAAlC,SACGI,GADUD,M,YCFF,SAASG,EAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,cACrD,OACE,eAAChB,EAAD,WACGiB,EAAaR,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,cAACT,EAAD,UAAqBS,EAAO,KAAOG,EAAMJ,IAAzBA,MAElB,eAACR,EAAD,yFAA2Ba,OAC3B,eAACb,EAAD,wKAAyCc,IAAzC,UCNS,SAASE,EAAT,GAA+D,IAAzCJ,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,cAAeJ,EAAW,EAAXA,QAC1DO,EAAiC,IAApBH,IACbI,EACJ,cAAChB,EAAD,wJAEIiB,EACJ,cAACR,EAAD,CAAgBC,MAAOA,EAAOC,MAAOA,EAAOC,cAAeA,IAG7D,OACE,qCACE,gCACG,IACD,cAACtB,EAAD,4LACA,cAACY,EAAD,CAAmBC,cAAeK,OAEpC,gCACG,IACD,cAACd,EAAD,4EACCqB,EAAaC,EAAuBC,Q,ICqB9BC,E,4MAxCbR,MAAQ,CACNS,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,kBAAoB,YAAwB,IAArBC,EAAoB,EAApBA,cACrB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAcjB,GAAKmB,EAAUF,EAAcjB,IAAM,O,EAItDoB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKlB,OAAOmB,QAAO,SAAUC,EAAKC,GACrD,OAAOD,EAAMC,IACZ,I,EAGLC,gCAAkC,WAChC,OAAkC,IAA9B,EAAKN,qBACA,GAGA,IAAM,EAAKA,qBAAwB,EAAKhB,MAAMS,MAAMc,QAAQ,I,4CAGvE,WACE,OACE,cAAC9C,EAAD,UACE,cAAC2B,EAAD,CACEJ,MAAOwB,KAAKxB,MACZC,MAAOuB,KAAKR,mBACZd,cAAesB,KAAKF,gCACpBxB,QAAS0B,KAAKZ,0B,GAlCNa,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d991bd9f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-color: #9a9a9a;\r\n\r\n  text-align: center;\r\n\r\n  padding: 15px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #010101;\r\n\r\n  margin: 0px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n\r\n  width: 150px;\r\n  height: 30px;\r\n  border: 2px solid black;\r\n  background-color: aquamarine;\r\n\r\n  margin-right: 10px;\r\n\r\n  transition-duration: 500ms;\r\n  &:hover,\r\n  &:focus {\r\n    color: red;\r\n    border-style: dashed;\r\n  }\r\n\r\n  &:nth-of-type(3) {\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const Undertitle = styled.h2`\r\n  margin: 0px;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const StatsList = styled.ul`\r\n  list-style: none;\r\n\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n  font-size: 20px;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  &:nth-of-type(5) {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n\r\nexport const Notification = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport ButtonsData from \"../../componentsData/ButtonsData.json\";\r\nimport { Button } from \"./StatisticsComponents.jsx\";\r\n\r\nexport default function StatisticsButtons({ onButtonClick }) {\r\n  return ButtonsData.map(({ id, text }) => (\r\n    <Button key={id} id={id} onClick={onButtonClick}>\r\n      {text}\r\n    </Button>\r\n  ));\r\n}\r\n\r\nStatisticsButtons.propTypes = {\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { StatsList, StatsItem } from \"./StatisticsComponents.jsx\";\r\nimport ListItemData from \"../../componentsData/ListItemData.json\";\r\n\r\nexport default function StatisticsList({ state, total, positiveTotal }) {\r\n  return (\r\n    <StatsList>\r\n      {ListItemData.map(({ id, text }) => (\r\n        <StatsItem key={id}>{text + \": \" + state[id]}</StatsItem>\r\n      ))}\r\n      <StatsItem>Всего ответов: {total()}</StatsItem>\r\n      <StatsItem>Всего положительных ответов: {positiveTotal()}%</StatsItem>\r\n    </StatsList>\r\n  );\r\n}\r\n\r\nStatisticsList.propTypes = {\r\n  positiveTotal: PropTypes.func.isRequired,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n  total: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport StatisticsButtons from \"./StatisticsButtons.jsx\";\r\nimport StatisticsList from \"./StatisticsList.jsx\";\r\nimport { Title, Undertitle, Notification } from \"./StatisticsComponents.jsx\";\r\n\r\nexport default function Statistics({ state, total, positiveTotal, onClick }) {\r\n  const renderTask = positiveTotal() === 0;\r\n  const trueRenderTaskMarkup = (\r\n    <Notification>В данный момент оценок нет.</Notification>\r\n  );\r\n  const falseRenderMarkup = (\r\n    <StatisticsList state={state} total={total} positiveTotal={positiveTotal} />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {\" \"}\r\n        <Title>Пожалуйста, оставьте Вашу оценку:</Title>\r\n        <StatisticsButtons onButtonClick={onClick} />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <Undertitle>Статистика:</Undertitle>\r\n        {renderTask ? trueRenderTaskMarkup : falseRenderMarkup}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  positiveTotal: PropTypes.func.isRequired,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n  total: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\nimport { Wrapper } from \"./components/Statistics/StatisticsComponents.jsx\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onRateButtonClick = ({ currentTarget }) => {\n    this.setState((prevState) => ({\n      [currentTarget.id]: prevState[currentTarget.id] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce(function (acc, value) {\n      return acc + value;\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    }\n\n    return ((100 / this.countTotalFeedback()) * this.state.good).toFixed(0);\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Statistics\n          state={this.state}\n          total={this.countTotalFeedback}\n          positiveTotal={this.countPositiveFeedbackPercentage}\n          onClick={this.onRateButtonClick}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}