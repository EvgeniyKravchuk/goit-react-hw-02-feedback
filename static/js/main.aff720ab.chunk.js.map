{"version":3,"sources":["components/buttons/Buttons.styled.jsx","components/generalComponents/general.styled.jsx","components/buttons/Buttons.jsx","components/feedback/Feedback.styled.jsx","components/feedback/FeedbackList.jsx","components/feedback/Feedback.jsx","App.js","index.js"],"names":["Button","styled","button","Wrapper","div","Section","section","props","list","Title","h1","Undertitle","h2","Buttons","state","onClick","Object","keys","map","key","type","name","List","ul","Item","li","p","FeedbackList","total","percentage","Feedback","App","good","neutral","bad","handleClick","evt","target","setState","prevState","countTotalFeedback","values","reduce","previous","current","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAEaA,EAASC,IAAOC,OAAV,kPCANC,EAAUF,IAAOG,IAAV,qKAYPC,EAAUJ,IAAOK,QAAV,+MAIJ,SAACC,GAAD,OAAYA,EAAMC,KAAO,OAAS,YAWrCC,EAAQR,IAAOS,GAAV,wGAQLC,EAAaV,IAAOW,GAAV,gI,OCjCR,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACvC,OACE,eAACV,EAAD,WACE,cAACM,EAAD,sCACCK,OAAOC,KAAKH,GAAOI,KAAI,SAACC,GAAD,OACtB,cAACnB,EAAD,CAAkBoB,KAAK,SAASC,KAAMF,EAAKJ,QAASA,EAApD,SACGI,GADUA,SCPd,IAAMG,EAAOrB,IAAOsB,GAAV,iDAIJC,EAAOvB,IAAOwB,GAAV,yEAMWxB,IAAOyB,EAAV,gDCTV,SAASC,EAAT,GAAqD,IAA7Bb,EAA4B,EAA5BA,MAAOc,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACnD,OACE,eAACP,EAAD,WACGN,OAAOC,KAAKH,GAAOI,KAAI,SAACC,GAAD,OACtB,eAACK,EAAD,WACGL,EADH,KACUL,EAAMK,GADhB,MAAWA,MAIb,eAACK,EAAD,qBAAcI,OACd,eAACJ,EAAD,kCAA2BK,IAA3B,UCTS,SAASC,EAAT,GAAiD,IAA7BhB,EAA4B,EAA5BA,MAAOc,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC/C,OACE,eAACxB,EAAD,CAASG,KAAK,OAAd,UACE,cAACG,EAAD,IACA,cAACgB,EAAD,CAAcb,MAAOA,EAAOc,MAAOA,EAAOC,WAAYA,O,ICDvCE,E,4MACnBjB,MAAQ,CACNkB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,YAAc,SAACC,GACb,IAAQf,EAASe,EAAIC,OAAbhB,KACR,EAAKiB,UAAS,SAACC,GAAD,sBACXlB,EAAOkB,EAAUlB,GAAQ,O,EAI9BmB,mBAAqB,WAGnB,OAFoBxB,OAAOyB,OAAO,EAAK3B,OACb4B,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,M,EAIrEC,gCAAkC,WAChC,IAAQb,EAAS,EAAKlB,MAAdkB,KACFJ,EAAQ,EAAKY,qBAGnB,OAAKZ,GAFeI,EAAOJ,EAAS,KAMlBkB,UAHT,G,4CAMX,WACE,OACE,eAAC3C,EAAD,WACE,cAACM,EAAD,wBACA,cAACI,EAAD,CAASC,MAAOiC,KAAKjC,MAAOC,QAASgC,KAAKZ,cAC1C,cAACL,EAAD,CACEhB,MAAOiC,KAAKjC,MACZc,MAAOmB,KAAKP,mBACZX,WAAYkB,KAAKF,yC,GAxCMG,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aff720ab.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n\r\n  background-color: orange;\r\n\r\n  padding: 0px;\r\n  margin: 0px;\r\n  margin-right: 10px;\r\n\r\n  transition-duration: 500ms;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  flex-direction: column;\r\n\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n\r\n  text-align: ${(props) => (props.list ? \"left\" : \"center\")};\r\n\r\n  width: 700px;\r\n\r\n  padding: 10px;\r\n  margin: 0px;\r\n  margin-top: 20px;\r\n\r\n  background-color: grey;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n\r\n  padding: 0px;\r\n  margin: 0px;\r\n`;\r\n\r\nexport const Undertitle = styled.h2`\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n\r\n  padding: 0px;\r\n  margin: 0px;\r\n  margin-bottom: 10px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Buttons.styled\";\r\nimport { Section, Undertitle } from \"../generalComponents/general.styled\";\r\n\r\nexport default function Buttons({ state, onClick }) {\r\n  return (\r\n    <Section>\r\n      <Undertitle>Please, leave feedback:</Undertitle>\r\n      {Object.keys(state).map((key) => (\r\n        <Button key={key} type=\"button\" name={key} onClick={onClick}>\r\n          {key}\r\n        </Button>\r\n      ))}\r\n    </Section>\r\n  );\r\n}\r\n\r\nButtons.propTypes = {\r\n  onClick: PropTypes.func,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 20px;\r\n\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const Notification = styled.p`\r\n  font-size: 25px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { List, Item } from \"./Feedback.styled\";\r\n\r\nexport default function FeedbackList({ state, total, percentage }) {\r\n  return (\r\n    <List>\r\n      {Object.keys(state).map((key) => (\r\n        <Item key={key}>\r\n          {key}: {state[key]}.\r\n        </Item>\r\n      ))}\r\n      <Item>Total: {total()}</Item>\r\n      <Item>Positive feedbacks: {percentage()}%</Item>\r\n    </List>\r\n  );\r\n}\r\n\r\nFeedbackList.propTypes = {\r\n  percentage: PropTypes.func,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n  total: PropTypes.func,\r\n};\r\n","import FeedbackList from \"./FeedbackList\";\r\nimport { Section, Undertitle } from \"../generalComponents/general.styled\";\r\n\r\nexport default function Feedback({ state, total, percentage }) {\r\n  return (\r\n    <Section list=\"true\">\r\n      <Undertitle></Undertitle>\r\n      <FeedbackList state={state} total={total} percentage={percentage} />\r\n    </Section>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.module.css\";\nimport Buttons from \"./components/buttons/Buttons\";\nimport Feedback from \"./components/feedback/Feedback\";\nimport { Wrapper, Title } from \"./components/generalComponents/general.styled\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (evt) => {\n    const { name } = evt.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const stateValues = Object.values(this.state);\n    const total = stateValues.reduce((previous, current) => previous + current);\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = (good / total) * 100;\n\n    if (!total) {\n      return 0;\n    }\n\n    return percentage.toFixed();\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Feedbacks</Title>\n        <Buttons state={this.state} onClick={this.handleClick} />\n        <Feedback\n          state={this.state}\n          total={this.countTotalFeedback}\n          percentage={this.countPositiveFeedbackPercentage}\n        />\n      </Wrapper>\n    );\n  }\n}\n\n// App>\n//  Section>\n//    -Title\n//    -Buttons\n//  Section>\n//    -Title\n//    -Feedback content\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}